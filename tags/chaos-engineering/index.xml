<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chaos Engineering on Programming Philosophy</title>
    <link>/tags/chaos-engineering/</link>
    <description>Recent content in Chaos Engineering on Programming Philosophy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Mar 2018 01:22:32 +0000</lastBuildDate>
    
	<atom:link href="/tags/chaos-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Principles of Chaos Engineering</title>
      <link>/posts/2018-03-28_principles-of-chaos-engineering/</link>
      <pubDate>Wed, 28 Mar 2018 01:22:32 +0000</pubDate>
      
      <guid>/posts/2018-03-28_principles-of-chaos-engineering/</guid>
      <description>“An overhead shot of a heap of scissors, knives, hammers and other tools” by Ashim D’Silva on Unsplash
From Principles of Chaos Engineering &amp;gt; Advances in large-scale, distributed software systems are changing the game for software engineering. As an industry, we are quick to adopt practices that increase flexibility of development and velocity of deployment. An urgent question follows on the heels of these benefits: How much confidence we can have in the complex systems that we put into production?</description>
    </item>
    
  </channel>
</rss>